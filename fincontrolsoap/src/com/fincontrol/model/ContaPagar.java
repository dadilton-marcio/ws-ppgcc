package com.fincontrol.model;

import java.util.Date;
import java.util.UUID;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.fincontrol.db.DBControl;

@XmlRootElement
@XmlAccessorType(XmlAccessType.PROPERTY)
@DynamoDBTable(tableName="ContaPagar")
public class ContaPagar extends Conta {
	
	private UUID codContaPagar;
	private Fornecedor fornecedor;
	private UUID codFornecedor;
	private Categoria categoria;

	@DynamoDBAutoGeneratedKey
	@DynamoDBHashKey(attributeName="codContaPagar")
	public UUID getCodContaPagar() {
		return codContaPagar;
	}
	public void setCodContaPagar(UUID codContaPagar) {
		this.codContaPagar = codContaPagar;
	}
	@DynamoDBIgnore
	@XmlTransient
	public Fornecedor getFornecedor() {
		return fornecedor;
	}
	public void setFornecedor(Fornecedor fornecedor) {
		this.fornecedor = fornecedor;
		this.codFornecedor = fornecedor.getCodFornecedor();
	}
	@XmlElement(required=true)
	@DynamoDBAttribute(attributeName="codFornecedor")
	public UUID getCodFornecedor() {
		return codFornecedor;
	}
	public void setCodFornecedor(UUID codFornecedor) {
		DBControl banco = new DBControl();
		this.fornecedor = banco.getMapper().load(Fornecedor.class, codFornecedor,banco.DBConfig);
		this.codFornecedor = codFornecedor;
	}
	
	@DynamoDBIgnore
	@XmlTransient
	public Categoria getCategoria() {
		return categoria;
	}
	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}
	@XmlElement
	@DynamoDBAttribute(attributeName="codCategoria")
	public UUID getCodCategoria() {
		return this.categoria.getCodCategoria();
	}
	public void setCodCategoria(UUID codCategoria) {
		DBControl banco = new DBControl();
		this.categoria = banco.getMapper().load(Categoria.class,codCategoria,banco.DBConfig);
	}
	@XmlElement(required=true)
	@DynamoDBTyped(DynamoDBAttributeType.S)
	@DynamoDBAttribute(attributeName="situacao")
	@Override
	public SituacaoConta getSituacao() {
		return super.getSituacao();
	}
	@Override
	public void setSituacao(SituacaoConta situacao) {
		super.setSituacao(situacao);
	}
	
	@Override
	@XmlElement(required=true)
	@DynamoDBAttribute(attributeName="descricao")
	public String getDescricao() {
		return super.getDescricao();
	}
	@Override
	public void setDescricao(String descricao) {
		super.setDescricao(descricao);
	}
	
	@Override
	@XmlElement(required=true)
	@DynamoDBAttribute(attributeName="valor")
	public Double getValor() {
		return super.valor;
	}
	@Override
	public void setValor(Double valor) {
		super.setValor(valor);
	}
	@Override
	@DynamoDBAttribute(attributeName="dataVencimento")
	@XmlElement(required=true)
	@XmlJavaTypeAdapter(DateAdapter.class)
	public Date getDataVencimento() {
		return super.dataVencimento;
	}
	@Override
	public void setDataVencimento(Date dataVencimento) {
		super.setDataVencimento(dataVencimento);
	}
	
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return "ContaPagar: {codContaPagar: " + codContaPagar + ", fornecedor: " + fornecedor + ", categoria: " + categoria + ", situacao: " + this.getSituacao().name() + ", descricao: " + this.getDescricao() + ", valor: " + this.getValor() + ", dataVencimento: " + this.getDataVencimento() + " }";
	}
	
}
